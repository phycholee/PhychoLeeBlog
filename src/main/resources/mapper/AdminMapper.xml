<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phycholee.blog.dao.AdminDao">
  <resultMap id="BaseResultMap" type="com.phycholee.blog.model.Admin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="github" jdbcType="VARCHAR" property="github" />
    <result column="cv" jdbcType="LONGVARCHAR" property="cv" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, password, salt, email, avatar, github, cv, nickname
  </sql>
  
  <select id="getAdminList" resultMap="BaseResultMap">
    SELECT id, username, email, avatar, github, cv, nickname
    from phycholee_blog.admin
  </select>


  <select id="findByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where username = #{username,jdbcType=INTEGER}
  </select>

  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.phycholee.blog.model.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="github != null">
        github,
      </if>
      <if test="cv != null">
        cv,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        #{github,jdbcType=VARCHAR},
      </if>
      <if test="cv != null">
        #{cv,jdbcType=LONGVARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.phycholee.blog.model.Admin">
    update admin
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        github = #{github,jdbcType=VARCHAR},
      </if>
      <if test="cv != null">
        cv = #{cv,jdbcType=LONGVARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>